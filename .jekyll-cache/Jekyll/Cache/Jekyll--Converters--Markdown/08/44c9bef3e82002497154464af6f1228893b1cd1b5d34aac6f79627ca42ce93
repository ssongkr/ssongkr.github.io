I"<h2 id="인덱스색인란">인덱스(색인)란?</h2>
<hr />
<p>데이터베이스의 인덱스를 살펴보기에 앞서 인덱스가 무엇인지 살펴보자. 위키백과에 정의된 색인의 정의는 다음과 같다.</p>

<blockquote>
  <p>색인(索引)은 책 속의 낱말이나 구절, 또 이에 관련한 지시자를 찾아보기 쉽도록 일정한 순서로 나열한 목록을 가리킨다. 인덱스(index)라고도 한다.</p>
</blockquote>

<p>이처럼 색인은 핵심 키워드들을 사전 순서대로 정렬하여, 책의 내용을 한 눈에 볼 수 있도록 한다. 그리고 각 키워드는 책의 페이지와 매핑되어 우리가 찾고자 하는 내용을 빠르게 찾을 수 있도록 돕는다. 만약 책에 색인이 없다면 최악의 경우에는 우리가 원하는 내용을 찾기 위해 책의 모든 페이지를 넘겨봐야 할 것이다.</p>

<p> </p>
<h3 id="데이터베이스-인덱스">데이터베이스 인덱스</h3>
<hr />

<p>데이터베이스 인덱스를 설명하기에 앞서, 책의 맨 앞 혹은 뒤에 있는 색인(인덱스)를 생각해보자. 책의 색인은 우리가 원하는 찾고자하는 단어나 주제를 빠르게 찾을 수 있도록 돕는다.</p>

<p>인덱스에 대한 <strong>키(Key)</strong>는 우리가 참고하고자 하는 주제나 단어이다. 익덱스의 엔트리는 키와 페이지의 번호로 구성된다. 키는 알파벳 순서로 되어있다. 그래서 우리는 매우 쉽게 책의 인덱스를 스캔할 수 있고, 엔트리를 찾을 수 있고, 페이지를 기록하고, 그다음에 올바른 페이지로 책을 넘긴다.</p>

<p>대체제를 생각해보자. 책에 인덱스가 없다면 주제 단어는 책의 각 페이지의 아래에 설명되 있을 것이다. 이러한 시스템에서 우리가 찾기 원하는 주제를 찾기 위해서는 책 전체를 뒤져봐야 할 것이다. 이것은 주제를 찾는 것을 매우 느리게 만든다.</p>

<p>책을 다 넘기면서 주제에 관한 모든 페이지를 보았을 것이다.</p>

<p>색인의 장점은 보고 싶은 책의 페이지에 어느 정도 직접 접근 할 수 있다는 것이다. 실제로 말하면 페이지를 넘기는 시간을 절약 할 수 있다.</p>

<p>데이터베이스의 인덱스를 사용하면 데이터베이스에서 데이터를 얻는 쿼리를 빠르게 해준다. 인덱스는 특정 테이블과 관련이 있고, 한개 혹은 그 이상의 키들로 구성된다. 그리고 테이블은 하나 이상의 인덱스를 만들 수 있다. 키는 인덱스에서 조회하려는 값을 나타내는 멋진 용어다. 키는 테이블의 컬럼을 기반으로 한다. 키를 인덱스와 비교하면 동일한 값을 가진 하나 이상의 데이터베이스 레코드를 찾을 수 있다.</p>

<p>인덱스는 데이터의 검색 속도를 크게 향상 시키므로 각 테이블에 대해 올바른 인덱스를 정의해야 한다.작은 데이터베이스의 경우 누락 된 인덱스는 눈에 띄지 않지만, 테이블 크기가 커지면 쿼리 시간이 훨씬 오래 걸린다.</p>

<p> </p>
<h2 id="데이터베이스-인덱스의-장점">데이터베이스 인덱스의 장점</h2>
<hr />
<p>한 번은 일련의 작업을 완료하는 데 약 8 일이 걸린 데이터베이스에서 작업했습니다. 가장 오래 실행되는 쿼리를보고 쿼리 계획 생성기를 통해 실행함으로써 데이터베이스가 새로운 인덱스의 이점을 얻을 수 있음을 깨달았습니다. 옵티마이 저는 쿼리 비용이 30 만 작업에서 30으로 감소 할 것으로 추정했습니다! 인덱스를 구현하고 8 일에서 2 시간까지 전체 작업을 수행했습니다. 말할 것도없이, 우리는 성능 향상에 매우 만족했습니다.</p>

<p> </p>
<h2 id="데이터베이스-색인">데이터베이스 색인</h2>
<hr />

<h2 id="출처">출처</h2>
<hr />
<ul>
  <li>https://www.essentialsql.com/what-is-a-database-index/</li>
  <li>https://k39335.tistory.com/26</li>
  <li>https://ko.wikipedia.org/wiki/%EC%83%89%EC%9D%B8</li>
</ul>
:ET