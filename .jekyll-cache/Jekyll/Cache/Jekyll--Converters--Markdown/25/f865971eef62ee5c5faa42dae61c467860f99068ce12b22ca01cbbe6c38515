I"O<h2 id="문제">문제</h2>
<p><a href="https://programmers.co.kr/learn/courses/30/lessons/60063">프로그래머스 - 블록 이동하기</a></p>

<hr />
<h2 id="설명">설명</h2>
<p>2x1 크기의 로봇이 주어졌을 때, 이동명령 및 회전명령을 최소로 사용하여 로봇을 출발지점에서 도착지점까지 이동시키는 문제다.</p>

<hr />
<h2 id="풀이">풀이</h2>
<p>최소 거리를 구하는 문제이므로 BFS를 이용하여 문제를 풀이하였다.</p>

<p>로봇의 위치와 방향을 이용하여 로봇의 위치정보를 저장하였다.</p>

<p>코드의 수를 줄이기 위해 로봇의 축을 기준으로만 회전을 하였다. 하지만 이렇게 할 경우 축이 다르지만 위치가 같은 경우를 고려하지 않기 때문에 올바를 답이 나오지 않았다. 큐에 로봇의 다음 위치를 저장할 때 축이 다르고 위치정보가 같은 경우를 함께 저장해 문제를 해결했다.</p>

<hr />
<h2 id="코드">코드</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">class</span> <span class="nc">Solution</span> <span class="o">{</span>

    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Pos</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="n">col</span><span class="o">,</span> <span class="n">dir</span><span class="o">;</span>
        <span class="kd">public</span> <span class="nf">Pos</span><span class="o">(</span><span class="kt">int</span> <span class="n">row</span><span class="o">,</span> <span class="kt">int</span> <span class="n">col</span><span class="o">,</span> <span class="kt">int</span> <span class="n">dir</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">row</span> <span class="o">=</span> <span class="n">row</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">col</span> <span class="o">=</span> <span class="n">col</span><span class="o">;</span>
            <span class="k">this</span><span class="o">.</span><span class="na">dir</span> <span class="o">=</span> <span class="n">dir</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="nc">Pos</span> <span class="nf">other</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="k">new</span> <span class="nf">Pos</span><span class="o">(</span><span class="n">row</span> <span class="o">+</span> <span class="n">dr</span><span class="o">[</span><span class="n">dir</span><span class="o">],</span> <span class="n">col</span> <span class="o">+</span> <span class="n">dc</span><span class="o">[</span><span class="n">dir</span><span class="o">],</span> <span class="o">(</span><span class="n">dir</span> <span class="o">+</span> <span class="mi">2</span><span class="o">)</span> <span class="o">%</span> <span class="mi">4</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">inside</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Pos</span> <span class="n">p</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">other</span><span class="o">();</span>
            <span class="k">return</span> <span class="o">(</span><span class="n">row</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">col</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">row</span> <span class="o">&lt;</span> <span class="no">N</span> <span class="o">&amp;&amp;</span> <span class="n">col</span> <span class="o">&lt;</span> <span class="no">N</span><span class="o">)</span>
                <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">row</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">.</span><span class="na">col</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">.</span><span class="na">row</span> <span class="o">&lt;</span> <span class="no">N</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">.</span><span class="na">col</span> <span class="o">&lt;</span> <span class="no">N</span><span class="o">);</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">empty</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Pos</span> <span class="n">p</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">other</span><span class="o">();</span>
            <span class="k">return</span> <span class="n">map</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">]</span> <span class="o">+</span> <span class="n">map</span><span class="o">[</span><span class="n">p</span><span class="o">.</span><span class="na">row</span><span class="o">][</span><span class="n">p</span><span class="o">.</span><span class="na">col</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">isDest</span><span class="o">()</span> <span class="o">{</span>
            <span class="nc">Pos</span> <span class="n">p</span> <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">other</span><span class="o">();</span>
            <span class="k">return</span> <span class="o">(</span><span class="n">row</span> <span class="o">==</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">col</span> <span class="o">==</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> 
                <span class="o">||</span> <span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">row</span> <span class="o">==</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">.</span><span class="na">col</span> <span class="o">==</span> <span class="no">N</span><span class="o">-</span><span class="mi">1</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kt">int</span> <span class="no">N</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">map</span><span class="o">;</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dr</span> <span class="o">=</span> <span class="o">{</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span> <span class="o">};</span>
    <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">dc</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span> <span class="o">};</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">board</span><span class="o">)</span> <span class="o">{</span>

        <span class="no">N</span> <span class="o">=</span> <span class="n">board</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">map</span> <span class="o">=</span> <span class="n">board</span><span class="o">;</span>

        <span class="kt">int</span> <span class="n">time</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
        <span class="nc">Queue</span><span class="o">&lt;</span><span class="nc">Pos</span><span class="o">&gt;</span> <span class="n">q</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">LinkedList</span><span class="o">&lt;</span><span class="nc">Pos</span><span class="o">&gt;();</span>
        <span class="kt">boolean</span><span class="o">[][][]</span> <span class="n">visit</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="no">N</span><span class="o">][</span><span class="no">N</span><span class="o">][</span><span class="mi">4</span><span class="o">];</span>
        <span class="n">q</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
        <span class="n">q</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span><span class="o">));</span>
        <span class="n">visit</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
        <span class="n">visit</span><span class="o">[</span><span class="mi">0</span><span class="o">][</span><span class="mi">1</span><span class="o">][</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

        <span class="k">while</span><span class="o">(!</span><span class="n">q</span><span class="o">.</span><span class="na">isEmpty</span><span class="o">())</span> <span class="o">{</span>
            <span class="n">time</span><span class="o">++;</span>
            <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
            <span class="k">while</span><span class="o">(</span><span class="n">size</span><span class="o">--</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">Pos</span> <span class="n">cur</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">poll</span><span class="o">();</span>
                <span class="kt">int</span> <span class="n">row</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">row</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">col</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">col</span><span class="o">;</span>
                <span class="kt">int</span> <span class="n">dir</span> <span class="o">=</span> <span class="n">cur</span><span class="o">.</span><span class="na">dir</span><span class="o">;</span>
                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                    <span class="kt">int</span> <span class="n">nr</span> <span class="o">=</span> <span class="n">row</span> <span class="o">+</span> <span class="n">dr</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                    <span class="kt">int</span> <span class="n">nc</span> <span class="o">=</span> <span class="n">col</span> <span class="o">+</span> <span class="n">dc</span><span class="o">[</span><span class="n">i</span><span class="o">];</span>
                    <span class="nc">Pos</span> <span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="n">nr</span><span class="o">,</span> <span class="n">nc</span><span class="o">,</span> <span class="n">dir</span><span class="o">);</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">next</span><span class="o">.</span><span class="na">inside</span><span class="o">()</span> <span class="o">||</span> <span class="o">!</span><span class="n">next</span><span class="o">.</span><span class="na">empty</span><span class="o">()</span> <span class="o">||</span> <span class="n">visit</span><span class="o">[</span><span class="n">nr</span><span class="o">][</span><span class="n">nc</span><span class="o">][</span><span class="n">dir</span><span class="o">])</span> <span class="o">{</span>
                        <span class="k">continue</span><span class="o">;</span>
                    <span class="o">}</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">next</span><span class="o">.</span><span class="na">isDest</span><span class="o">())</span> <span class="o">{</span>
                        <span class="k">return</span> <span class="n">time</span><span class="o">;</span>
                    <span class="o">}</span>

                    <span class="n">q</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="n">nr</span><span class="o">,</span> <span class="n">nc</span><span class="o">,</span> <span class="n">dir</span><span class="o">));</span>
                    <span class="n">visit</span><span class="o">[</span><span class="n">nr</span><span class="o">][</span><span class="n">nc</span><span class="o">][</span><span class="n">dir</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>

                    <span class="nc">Pos</span> <span class="n">o</span> <span class="o">=</span> <span class="n">next</span><span class="o">.</span><span class="na">other</span><span class="o">();</span>
                    <span class="k">if</span><span class="o">(!</span><span class="n">visit</span><span class="o">[</span><span class="n">o</span><span class="o">.</span><span class="na">row</span><span class="o">][</span><span class="n">o</span><span class="o">.</span><span class="na">col</span><span class="o">][</span><span class="n">o</span><span class="o">.</span><span class="na">dir</span><span class="o">])</span> <span class="o">{</span>
                        <span class="n">q</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="n">o</span><span class="o">);</span>
                        <span class="n">visit</span><span class="o">[</span><span class="n">o</span><span class="o">.</span><span class="na">row</span><span class="o">][</span><span class="n">o</span><span class="o">.</span><span class="na">col</span><span class="o">][</span><span class="n">o</span><span class="o">.</span><span class="na">dir</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span> 
                    <span class="o">}</span>
                <span class="o">}</span>

                <span class="kt">int</span><span class="o">[]</span> <span class="n">list</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="n">dir</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">2</span> <span class="o">};</span>
                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">list</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[]</span> <span class="o">{</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">3</span> <span class="o">};</span>
                <span class="o">}</span>

                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="nl">nd:</span> <span class="n">list</span><span class="o">)</span> <span class="o">{</span>
                    <span class="nc">Pos</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="n">row</span> <span class="o">+</span> <span class="n">dr</span><span class="o">[</span><span class="n">nd</span><span class="o">],</span> <span class="n">col</span> <span class="o">+</span> <span class="n">dc</span><span class="o">[</span><span class="n">nd</span><span class="o">],</span> <span class="n">dir</span><span class="o">);</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">inside</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="o">.</span><span class="na">empty</span><span class="o">()</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">visit</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">][</span><span class="n">nd</span><span class="o">])</span> <span class="o">{</span>
                        <span class="k">if</span><span class="o">(</span><span class="n">p</span><span class="o">.</span><span class="na">isDest</span><span class="o">())</span> <span class="o">{</span>
                            <span class="k">return</span> <span class="n">time</span><span class="o">;</span>
                        <span class="o">}</span>
                        <span class="n">q</span><span class="o">.</span><span class="na">offer</span><span class="o">(</span><span class="k">new</span> <span class="nc">Pos</span><span class="o">(</span><span class="n">row</span><span class="o">,</span> <span class="n">col</span><span class="o">,</span> <span class="n">nd</span><span class="o">));</span>
                        <span class="n">visit</span><span class="o">[</span><span class="n">row</span><span class="o">][</span><span class="n">col</span><span class="o">][</span><span class="n">nd</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="n">time</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET