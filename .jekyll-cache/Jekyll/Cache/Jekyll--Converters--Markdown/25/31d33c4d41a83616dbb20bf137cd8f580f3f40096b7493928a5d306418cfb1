I"'<hr />
<h2 id="call-apply-method">call, apply method</h2>
<p>자바스크립트에서 함수는 선언한 후에 호출해야 실행된다. 자바스크립트도 다른 프로그래밍 언어와 마찬가지로 함수 이름 뒤에 ()를 붙여서 함수를 호출 할 수 있다. 그리고 call, apply 메소드를 이용하여 함수를 호출할 수도 있다. 다음은 자바스크립트에서 함수를 호출하는 실제 코드이다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">add</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">a</span><span class="p">,</span> <span class="nx">b</span><span class="p">,</span> <span class="nx">c</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">a</span> <span class="o">+</span> <span class="nx">b</span> <span class="o">+</span> <span class="nx">c</span><span class="p">;</span>
<span class="p">}</span>

<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="c1">// 3</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">));</span> <span class="c1">// 3</span>
<span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">add</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]));</span> <span class="c1">// 3</span>
</code></pre></div></div>

<p>위의 3가지 함수 실행 결과는 모두 동일하고, 실제로 모두 동일한 함수 호출이다. call 메소드는 보통 함수처럼 인자를 넣는다. 그리고 apply 메소드는 인자를 배열 하나로 묶어 전달하는 것을 확인할 수 있다.</p>

<p>그렇다면 call과 apply 메소드가 공통적으로 가지고 있는 null 인자의 역할은 무엇일까?</p>

<p>call과 apply의 첫 번째 인자는 함수를 호출한 객체 즉, this를 대체한다. 다음 코드를 살펴보자.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">kim</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">kim</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">greeting</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hi! I'm </span><span class="dl">"</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">song</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">song</span><span class="dl">'</span>
<span class="p">}</span>

<span class="nx">kim</span><span class="p">.</span><span class="nx">greeting</span><span class="p">();</span> <span class="c1">// Hi! I'm kim</span>
<span class="nx">kim</span><span class="p">.</span><span class="nx">greeting</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">song</span><span class="p">)</span> <span class="c1">// Hi! I'm song</span>
</code></pre></div></div>

<p>kim.greeting() 메소드를 실행하면 메소드 내에 this.name의 this는 자신을 호출한 객체인 kim을 가리킨다. 따라서 Hi! I’m kim이라는 문장이 콘솔에 출력되는 것을 확인할 수 있다.</p>

<p>그런데 kim.greeting.call(song)은 자신을 호출한 객체를 song으로 대체한다. 따라서 this.name의 this는 song을 가리키게 되고, 콘솔에 출력되는 결과는 Hi! I’m song이 된다.</p>

<p>브라우저 환경에서 this는 기본적으로 window를 가리킨다. call, apply, bind에서 첫 번째 인자로 객체를 넣으면 this를 대체할 수 있다.</p>

<hr />
<h2 id="arguments-and-call-apply-method">arguments and call, apply method</h2>
<p>자바스크립트의 함수는 arguments라는 숨겨진 속성을 가지고 있다. 그리고 arguments 속성은 함수에 들어온 인자를 배열과 유사한 형식으로 반환한다. 하지만 이는 실제 배열과는 다르다. 따라서 배열의 메소드를 사용할 수 없다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">argTest1</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span>
<span class="p">}</span>
<span class="nx">argTest1</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// [1, 'string']</span>

<span class="kd">function</span> <span class="nx">argTest2</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">join</span><span class="p">());</span>
<span class="p">}</span>
<span class="nx">argTest2</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// Uncaught TypeError: arguments.join is not a function</span>

<span class="kd">function</span> <span class="nx">argTest3</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">join</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">));</span>
<span class="p">}</span>
<span class="nx">argTest3</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="dl">'</span><span class="s1">string</span><span class="dl">'</span><span class="p">);</span> <span class="c1">// 1, string</span>
</code></pre></div></div>

<p>그렇다면 arguments에 배열의 join 함수를 사용하려면 어떻게 해야할까? 이때 call, apply 메소드를 이용하여 배열의 프로토타입에 있는 join 함수를 사용하면 된다.</p>

<h2 id="bind-method">bind method</h2>
<p>bind 메소드도 앞서 설명한 call, apply와 사용 방법이 유사하다. 다만, bind는 함수가 가리키는 this만 바꾸고 함수를 직접적으로 호출하지 않는다.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">kim</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">kim</span><span class="dl">'</span><span class="p">,</span>
  <span class="na">greeting</span><span class="p">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">Hi! I'm </span><span class="dl">"</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">song</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">'</span><span class="s1">song</span><span class="dl">'</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">greeting2</span> <span class="o">=</span> <span class="nx">kim</span><span class="p">.</span><span class="nx">greeting</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">song</span><span class="p">);</span>
<span class="nx">greeting2</span><span class="p">();</span> <span class="c1">// 'Hi! I'm song'</span>
</code></pre></div></div>
<p>kim.greeting.bind(song)를 실행하면 greeting 함수의 this가 가리키는 객체가 kim에서 song으로 변경된다.
그리고 함수의 반환값을 변수에 저장하여 함수를 실행할 수 있다.</p>

<h2 id="reference">Reference</h2>
<p><a href="https://www.zerocho.com/category/JavaScript/post/57433645a48729787807c3fd">zerocho blog</a></p>
:ET