I"a$<h2 id="문제">문제</h2>
<p><a href="https://www.acmicpc.net/problem/2342">백준 - Dance Dance Revolution</a></p>

<h2 id="풀이">풀이</h2>
<p>다이나믹 프로그래밍 기법으로 해결할 수 있는 문제다.</p>

<p>DFS에 메모이제이션 기법을 적용하여 풀이를 진행하였다.</p>

<p>하지만 현재 풀이법은 메모리를 많이 차지한다는 단점이 있다.</p>

<p>DP를 반복문을 통해 구현하고, 슬라이딩 윈도우 기법을 적용하면 메모리를 절약할 수 있을 것 같다. 이 부분은 나중에 다시 한번 작성해보도록 해야겠다.</p>

<h2 id="코드">코드</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">step</span><span class="o">;</span>
	<span class="kd">static</span> <span class="kt">int</span><span class="o">[][][]</span> <span class="n">cache</span><span class="o">;</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">Exception</span> <span class="o">{</span>
		<span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
		<span class="nc">StringTokenizer</span> <span class="n">st</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">());</span>
		<span class="n">step</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">st</span><span class="o">.</span><span class="na">countTokens</span><span class="o">()-</span><span class="mi">1</span><span class="o">];</span>
		<span class="n">cache</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">5</span><span class="o">][</span><span class="mi">5</span><span class="o">][</span><span class="n">step</span><span class="o">.</span><span class="na">length</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">step</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
			<span class="n">step</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">st</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
		<span class="o">}</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">dp</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">));</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">dp</span><span class="o">(</span><span class="kt">int</span> <span class="n">l</span><span class="o">,</span> <span class="kt">int</span> <span class="n">r</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">step</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">if</span><span class="o">(</span><span class="n">cache</span><span class="o">[</span><span class="n">l</span><span class="o">][</span><span class="n">r</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="n">cache</span><span class="o">[</span><span class="n">l</span><span class="o">][</span><span class="n">r</span><span class="o">][</span><span class="n">i</span><span class="o">];</span>
		<span class="o">}</span>
		
		<span class="n">cache</span><span class="o">[</span><span class="n">l</span><span class="o">][</span><span class="n">r</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="mi">987654321</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">dp</span><span class="o">(</span><span class="n">step</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">r</span><span class="o">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">cost</span><span class="o">(</span><span class="n">l</span><span class="o">,</span> <span class="n">step</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">dp</span><span class="o">(</span><span class="n">l</span><span class="o">,</span> <span class="n">step</span><span class="o">[</span><span class="n">i</span><span class="o">],</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">cost</span><span class="o">(</span><span class="n">r</span><span class="o">,</span> <span class="n">step</span><span class="o">[</span><span class="n">i</span><span class="o">]);</span>
		<span class="n">cache</span><span class="o">[</span><span class="n">l</span><span class="o">][</span><span class="n">r</span><span class="o">][</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="nc">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">x</span><span class="o">,</span> <span class="n">y</span><span class="o">);</span>
		<span class="k">return</span> <span class="n">cache</span><span class="o">[</span><span class="n">l</span><span class="o">][</span><span class="n">r</span><span class="o">][</span><span class="n">i</span><span class="o">];</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">cost</span><span class="o">(</span><span class="kt">int</span> <span class="n">cur</span><span class="o">,</span> <span class="kt">int</span> <span class="n">next</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span><span class="o">(</span><span class="n">cur</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="mi">2</span><span class="o">;</span>
		<span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cur</span> <span class="o">==</span> <span class="n">next</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
		<span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="nc">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">cur</span><span class="o">-</span><span class="n">next</span><span class="o">)</span> <span class="o">==</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">return</span> <span class="mi">4</span><span class="o">;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="mi">3</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
:ET